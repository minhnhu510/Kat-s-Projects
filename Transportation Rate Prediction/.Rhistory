###Load data
df = read.csv("/Users/admin/Desktop/Kat's Projects/Transportation Rate Prediction/data/train.csv",na.string="")
###DATA CLEANING
##Structure
str(df)
df$CryoSleep=as.logical(df$CryoSleep)
df$VIP=as.logical(df$VIP)
df$Transported=as.factor(df$Transported)
df$HomePlanet=as.factor(df$HomePlanet)
df$Destination=as.factor(df$Destination)
##Calculate the percentage of NA of each column
p<-function(x) {sum(is.na(x)/length(x))*100}
apply(df,2,p)
sum(is.na(df)) #a total of 2324 columns is missing
(sum(is.na(df))/nrow(df))
##VISUALIZE the NA
library(visdat)
vis_miss(df)
library(VIM)
res <- summary(aggr(df, prop = TRUE, combined = TRUE,cex.axis=.7))$combinations
?vis_miss
###Feature Selection
library(mlbench)
library(caret)
##1. Using a random forest selection function
control <- rfeControl(functions=rfFuncs, method="cv", number=10)
rfe.res<- rfe(d[,-c(1,4,13,14)],d[,14],rfeControl=control)
##2. Sumarize feature:
print(rfe.res)
dev.off()
plot(rfe.res, type=c("g", "o"))
##3. Determine the 8 importance features:
feat.imp<-data.frame(feature=row.names(varImp(rfe.res))[1:8],
importance=varImp(rfe.res)[1:8,1])
ggplot(data = feat.imp,
aes(x = reorder(feature, -importance), y = importance, fill = feature)) +
geom_bar(stat="identity") + labs(x = "Features", y = "Variable Importance") +
geom_text(aes(label = round(importance, 0.5)), vjust=1.6, color="white", size=3) +
theme_bw() + theme(legend.position = "none")
##CHECK if missing value is random
# Subset all the NA in the original dataframe
Missdf<- as.data.frame(abs(is.na(df)))
Missvar <- Missdf[which(sapply(Missdf, sd) > 0)]
#Check the correlation of missing value of 1 column against the missing value in the other columns
View(as.data.frame(cor(Missvar)))
###IMPUTATION:
library(mice)
impute<-mice(df,m=3,maxit=2,seed=123)#imputation m=3
impute #Look at the type of imputation for each column
#Complete the data
library(mice)
d<-complete(impute,action=1L) #Stored all 3 imputation in 1 dataframe
library(psych)
dev.off()
#Graph the correlation between variables
#after complete imputation
corPlot(d[,c(3,6,8,9,10,11,12)],cex=0.6)
###Feature Selection
library(mlbench)
library(caret)
##1. Using a random forest selection function
control <- rfeControl(functions=rfFuncs, method="cv", number=10)
rfe.res<- rfe(d[,-c(1,4,13,14)],d[,14],rfeControl=control)
##2. Sumarize feature:
print(rfe.res)
dev.off()
plot(rfe.res, type=c("g", "o"))
###Feature Selection
library(mlbench)
library(caret)
##1. Using a random forest selection function
control <- rfeControl(functions=rfFuncs, method="cv", number=10)
rfe.res<- rfe(d[,-c(1,4,13,14)],d[,14],rfeControl=control)
